---
name: 'Reece specific Helm packaging, publishing and pinning'
description: |
  Packages a Helm chart - including Cloudformation templates if they exist, which is a reecetech specific thing to do.
  Publishes the Helm chart to Artifactory, again following reecetech specific naming of Helm chart Artifactory
  repositories - `helm-local` & `helm-local-stable`.
  Pins the Helm chart version to a reecetech specific `kubernetes-configuration-files` repository commit ID.
  Authentication for Artifactory and AWS is handled via OIDC integrations between GitHub and reecetech Vault & AWS
  accounts.

branding:
  icon: plus
  color: purple

inputs:
  name:
    description: 'Name of the Helm chart'
    required: true
  version:
    description: 'Version of the Helm chart'
    required: true

outputs:
  chart:
    description: 'The filename of the Helm chart produced'
    value: ${{ steps.package.outputs.chart }}

runs:
  using: "composite"
  steps:
    - id: vars
      name: Get Reece default values from GitHub secrets
      shell: bash
      run: ${{ github.action_path }}/get-default-reece-values.sh

    - id: vault
      name: Obtain Vault token and Stash credentials
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: ${{ steps.vars.outputs.vault_production }}
        role: ${{ github.repository_owner }}
        method: jwt
        path: github
        exportToken: true  # get the Vault token as well, to be used in `artifactory-credentials`
        secrets: |
          ${{ steps.vars.outputs.stash_ad_creds_path }} username | stash_ad_username ;
          ${{ steps.vars.outputs.stash_ad_creds_path }} current_password | stash_ad_password

    - id: artifactory
      name: Obtain Artifactory credentials
      shell: bash
      env:
        token: ${{ env.VAULT_TOKEN }}
        url: ${{ steps.vars.outputs.vault_production }}
        path: ${{ steps.vars.outputs.artifactory_creds_path }}
      # until `hashicorp/vault-action` supports secrets engines that need `write` we have to run our own script
      run: ${{ github.action_path }}/artifactory-creds-from-vault.sh

    - id: stash
      name: Obtain a PAT to use with Stash
      uses: reecetech/bitbucket-server-pat-generator@fixup-input-var-use
      with:
        base_url: ${{ steps.vars.outputs.stash_production }}
        username: ${{ steps.vault.outputs.stash_ad_username }}
        password: ${{ steps.vault.outputs.stash_ad_password }}

    - id: package
      name: Package a Helm Chart
      shell: bash
      env:
        name: ${{ inputs.name }}
        version: ${{ inputs.version }}
      run: ${{ github.action_path }}/helm-package-with-cloudformation.sh

    - id: publish
      name: Publish a Helm Chart
      shell: bash
      env:
        chart: ${{ steps.package.outputs.chart }}
        version: ${{ inputs.version }}
        url: ${{ steps.vars.outputs.artifactory_production }}
        username: ${{ steps.artifactory.outputs.username }}
        password: ${{ steps.artifactory.outputs.password }}
      run: ${{ github.action_path }}/helm-publish-to-artifactory.sh

    - id: aws
      name: Obtain AWS keys
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ steps.vars.outputs.barnacle_role }}
        aws-region: ${{ steps.vars.outputs.barnacle_region }}
